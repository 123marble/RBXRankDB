"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[223],{38652:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new RankDBClient instance.","params":[{"name":"baseUrl","desc":"The base URL of the RankDB API","lua_type":"string"},{"name":"jwtToken","desc":"Optional JWT token for authentication","lua_type":"string?"}],"returns":[{"desc":"A new RankDBClient instance","lua_type":"RankDBClient"}],"function_type":"static","source":{"line":67,"path":"src/rbxRankDB/init.lua"}},{"name":"request","desc":"Sends a request to the RankDB API.","params":[{"name":"method","desc":"The HTTP method to use","lua_type":"string"},{"name":"endpoint","desc":"The API endpoint","lua_type":"string"},{"name":"body","desc":"Optional request body","lua_type":"table?"}],"returns":[{"desc":"The response from the API","lua_type":"table"}],"function_type":"method","source":{"line":82,"path":"src/rbxRankDB/init.lua"}},{"name":"createList","desc":"Creates a new list in the RankDB.","params":[{"name":"listId","desc":"The ID of the list to create","lua_type":"string"},{"name":"set","desc":"The set to use (default: \\"default\\")","lua_type":"string?"},{"name":"mergeSize","desc":"The merge size (default: 500)","lua_type":"number?"},{"name":"splitSize","desc":"The split size (default: 2000)","lua_type":"number?"},{"name":"replace","desc":"Whether to replace an existing list (default: false)","lua_type":"boolean?"}],"returns":[{"desc":"True if the list was created, false if it already exists","lua_type":"boolean"}],"function_type":"method","source":{"line":123,"path":"src/rbxRankDB/init.lua"}},{"name":"getListLength","desc":"Gets the length of a list.","params":[{"name":"listId","desc":"The ID of the list","lua_type":"string"}],"returns":[{"desc":"The number of elements in the list","lua_type":"number"}],"function_type":"method","source":{"line":162,"path":"src/rbxRankDB/init.lua"}},{"name":"deleteList","desc":"Deletes a list from the RankDB.","params":[{"name":"listId","desc":"The ID of the list to delete","lua_type":"string"}],"returns":[{"desc":"True if the list was deleted, false if it was not found","lua_type":"boolean"}],"function_type":"method","source":{"line":172,"path":"src/rbxRankDB/init.lua"}},{"name":"getElement","desc":"Gets an element from a list.","params":[{"name":"listId","desc":"The ID of the list","lua_type":"string"},{"name":"elementId","desc":"The ID of the element","lua_type":"number"}],"returns":[{"desc":"The element data","lua_type":"getElementResult"}],"function_type":"method","source":{"line":182,"path":"src/rbxRankDB/init.lua"}},{"name":"updateElement","desc":"Updates an element in a list.","params":[{"name":"listId","desc":"The ID of the list","lua_type":"string"},{"name":"element","desc":"The element to update","lua_type":"element"}],"returns":[{"desc":"The result of the update operation","lua_type":"updateElementResult"}],"function_type":"method","source":{"line":227,"path":"src/rbxRankDB/init.lua"}},{"name":"updateMultiElements","desc":"Updates multiple elements in a list.\\n:::info\\nThis method does not return previous rank or score because the API does not support it.\\n:::","params":[{"name":"listId","desc":"The ID of the list","lua_type":"string"},{"name":"elements","desc":"The elements to update","lua_type":"{element}"},{"name":"results","desc":"Whether to return the results of the update operation (default: true)","lua_type":"boolean?"}],"returns":[{"desc":"The results of the update operation","lua_type":"{updateElementResult}"}],"function_type":"method","source":{"line":248,"path":"src/rbxRankDB/init.lua"}},{"name":"deleteElement","desc":"Deletes an element from a list.","params":[{"name":"listId","desc":"The ID of the list","lua_type":"string"},{"name":"elementId","desc":"The ID of the element to delete","lua_type":"number"}],"returns":[{"desc":"True if the element was deleted, false otherwise","lua_type":"boolean"}],"function_type":"method","source":{"line":280,"path":"src/rbxRankDB/init.lua"}},{"name":"_constructElementBodyFromElement","desc":"Constructs the element body for API requests from an element object.","params":[{"name":"element","desc":"The element to construct the body from","lua_type":"element"}],"returns":[{"desc":"The constructed element body","lua_type":"table"}],"function_type":"method","source":{"line":289,"path":"src/rbxRankDB/init.lua"}},{"name":"_constructUpdateElementResult","desc":"Constructs the update element result from the API response.","params":[{"name":"result","desc":"The API response","lua_type":"table"}],"returns":[{"desc":"The constructed update element result","lua_type":"updateElementResult"}],"function_type":"method","source":{"line":303,"path":"src/rbxRankDB/init.lua"}}],"properties":[],"types":[{"name":"getElementResult","desc":"","lua_type":"{id: number, score: number, tieBreaker: number, rank: number, extra: {}}","source":{"line":10,"path":"src/rbxRankDB/init.lua"}},{"name":"getMultiElementsResult","desc":"","lua_type":"{found: {getElementResult}, notFound: {number}}","source":{"line":20,"path":"src/rbxRankDB/init.lua"}},{"name":"updateElementResult","desc":"","lua_type":"{id: number, prevRank: number, newRank: number, prevScore: number, newScore: number, shiftedBoundaries: {shiftedBoundary}}","source":{"line":27,"path":"src/rbxRankDB/init.lua"}},{"name":"updateMultiElementsResult","desc":"","lua_type":"{found: {updateElementResult}, notFound: {number}}","source":{"line":38,"path":"src/rbxRankDB/init.lua"}},{"name":"shiftedBoundary","desc":"","lua_type":"{id: number, prevRank: number, newRank: number}","source":{"line":45,"path":"src/rbxRankDB/init.lua"}},{"name":"element","desc":"","lua_type":"{id: number, score: number, tieBreaker: number, extra: {}}?","source":{"line":53,"path":"src/rbxRankDB/init.lua"}}],"name":"RankDBClient","desc":"","source":{"line":7,"path":"src/rbxRankDB/init.lua"}}')}}]);